syntax = "proto3";

package blixard;

// Additional Raft-specific messages for consensus testing

// Raft consensus service for testing
service RaftConsensusService {
  // Send generic Raft message (for testing different message types)
  rpc SendRaftMessage(RaftMessage) returns (RaftMessage);
  
  // Propose a value through Raft
  rpc Propose(ProposeRequest) returns (ProposeResponse);
  
  // Get cluster state for verification
  rpc GetClusterState(Empty) returns (ClusterState);
}

// Generic Raft message for testing
message RaftMessage {
  uint64 from_node = 1;
  uint64 to_node = 2;
  uint64 term = 3;
  string message_type = 4; // "request_vote", "vote_granted", "heartbeat", "append_entries", etc.
  bytes data = 5;
}

// Proposal request
message ProposeRequest {
  bytes data = 1;
}

// Proposal response
message ProposeResponse {
  bool success = 1;
  string error_message = 2;
}

// Cluster state for verification
message ClusterState {
  uint64 leader_id = 1;
  repeated NodeInfo nodes = 2;
  uint64 term = 3;
}

// Empty message for requests without parameters
message Empty {}